{"ast":null,"code":"import api from \"../../apis/api\";\nimport history from \"../../history\";\nimport { START_SEARCHING, SEARCH_REPO, ADD_BOOKMARK, DELETE_BOOKMARK, FETCH_BOOKMARKS, FETCH_REPOS_FAILD, LOGIN, SIGNUP, FAILD_REQUEST, SET_TOKEN, LOGOUT } from \"./types\";\nexport const searchRepo = searchterm => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: START_SEARCHING\n    });\n    const response = await api.get(`/search/${searchterm}`);\n    dispatch({\n      type: SEARCH_REPO,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_REPOS_FAILD\n    });\n  }\n};\nexport const addBookmark = id => async (dispatch, getState) => {\n  const response = await api.get(`/bookmark/${id}`);\n  dispatch({\n    type: ADD_BOOKMARK,\n    payload: response\n  });\n};\nexport const deleteBookmark = id => async (dispatch, getState) => {\n  const response = await api.delete(`/delete/${id}`);\n  dispatch({\n    type: DELETE_BOOKMARK,\n    payload: response\n  });\n};\nexport const fetchBookmarks = () => async (dispatch, getState) => {\n  const response = await api.get(`/bookmarks`);\n  dispatch({\n    type: FETCH_BOOKMARKS,\n    payload: response.data\n  });\n};\nexport const login = formData => async (dispatch, getState) => {\n  history.push(\"/search\");\n\n  try {\n    const response = await api.post(`/login`, formData);\n    dispatch({\n      type: LOGIN,\n      payload: response.data\n    });\n    dispatch({\n      type: SET_TOKEN,\n      payload: response.data.token\n    });\n    history.push(\"/search\");\n    localStorage.setItem(\"userData\", JSON.stringify({\n      userId: response.data.userId,\n      token: response.data.token\n    }));\n  } catch (err) {\n    dispatch({\n      type: FAILD_REQUEST,\n      payload: err.response.data\n    });\n    history.push(\"/\");\n  }\n};\nexport const signup = formData => async (dispatch, getState) => {\n  try {\n    const response = await api.post(`/signup`, formData);\n    dispatch({\n      type: SIGNUP,\n      payload: response.data\n    });\n    dispatch({\n      type: SET_TOKEN,\n      payload: response.data.token\n    });\n    history.push(\"/search\");\n  } catch (err) {\n    dispatch({\n      type: FAILD_REQUEST,\n      payload: err.response.data\n    });\n  }\n};\nexport const setToken = () => async (dispatch, getState) => {\n  const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n\n  if (storedData && storedData.token) {\n    dispatch({\n      type: SET_TOKEN,\n      payload: storedData.token\n    });\n  }\n};\nexport const removeToken = () => async (dispatch, getState) => {\n  localStorage.removeItem(\"userData\");\n  dispatch({\n    type: LOGOUT\n  });\n  history.push(\"/\");\n};","map":{"version":3,"sources":["C:/Users/harri/Documents/jojo/server/client/src/store/actions/index.js"],"names":["api","history","START_SEARCHING","SEARCH_REPO","ADD_BOOKMARK","DELETE_BOOKMARK","FETCH_BOOKMARKS","FETCH_REPOS_FAILD","LOGIN","SIGNUP","FAILD_REQUEST","SET_TOKEN","LOGOUT","searchRepo","searchterm","dispatch","getState","type","response","get","payload","data","error","addBookmark","id","deleteBookmark","delete","fetchBookmarks","login","formData","push","post","token","localStorage","setItem","JSON","stringify","userId","err","signup","setToken","storedData","parse","getItem","removeToken","removeItem"],"mappings":"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","sourcesContent":["import api from \"../../apis/api\";\r\nimport history from \"../../history\";\r\n\r\nimport {\r\n  START_SEARCHING,\r\n  SEARCH_REPO,\r\n  ADD_BOOKMARK,\r\n  DELETE_BOOKMARK,\r\n  FETCH_BOOKMARKS,\r\n  FETCH_REPOS_FAILD,\r\n  LOGIN,\r\n  SIGNUP,\r\n  FAILD_REQUEST,\r\n  SET_TOKEN,\r\n  LOGOUT,\r\n} from \"./types\";\r\n\r\nexport const searchRepo = (searchterm) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: START_SEARCHING });\r\n    const response = await api.get(`/search/${searchterm}`);\r\n    dispatch({ type: SEARCH_REPO, payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_REPOS_FAILD });\r\n  }\r\n};\r\n\r\nexport const addBookmark = (id) => async (dispatch, getState) => {\r\n  const response = await api.get(`/bookmark/${id}`);\r\n  dispatch({ type: ADD_BOOKMARK, payload: response });\r\n};\r\n\r\nexport const deleteBookmark = (id) => async (dispatch, getState) => {\r\n  const response = await api.delete(`/delete/${id}`);\r\n  dispatch({ type: DELETE_BOOKMARK, payload: response });\r\n};\r\n\r\nexport const fetchBookmarks = () => async (dispatch, getState) => {\r\n  const response = await api.get(`/bookmarks`);\r\n  dispatch({ type: FETCH_BOOKMARKS, payload: response.data });\r\n};\r\n\r\nexport const login = (formData) => async (dispatch, getState) => {\r\n  history.push(\"/search\");\r\n  try {\r\n    const response = await api.post(`/login`, formData);\r\n    dispatch({ type: LOGIN, payload: response.data });\r\n    dispatch({ type: SET_TOKEN, payload: response.data.token });\r\n    history.push(\"/search\");\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: response.data.userId,\r\n        token: response.data.token,\r\n      })\r\n    );\r\n  } catch (err) {\r\n    dispatch({ type: FAILD_REQUEST, payload: err.response.data });\r\n    history.push(\"/\");\r\n  }\r\n};\r\n\r\nexport const signup = (formData) => async (dispatch, getState) => {\r\n  try {\r\n    const response = await api.post(`/signup`, formData);\r\n    dispatch({ type: SIGNUP, payload: response.data });\r\n    dispatch({ type: SET_TOKEN, payload: response.data.token });\r\n    history.push(\"/search\");\r\n  } catch (err) {\r\n    dispatch({ type: FAILD_REQUEST, payload: err.response.data });\r\n  }\r\n};\r\n\r\nexport const setToken = () => async (dispatch, getState) => {\r\n  const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n  if (storedData && storedData.token) {\r\n    dispatch({ type: SET_TOKEN, payload: storedData.token });\r\n  }\r\n};\r\n\r\nexport const removeToken = () => async (dispatch, getState) => {\r\n  localStorage.removeItem(\"userData\");\r\n  dispatch({ type: LOGOUT });\r\n  history.push(\"/\");\r\n};\r\n"]},"metadata":{},"sourceType":"module"}