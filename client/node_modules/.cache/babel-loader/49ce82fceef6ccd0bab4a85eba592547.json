{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harri\\\\Documents\\\\jojo\\\\server\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { login, signup } from \"../../store/actions\";\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = props => {\n  _s();\n\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const switchModeHandler = () => {\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const handleChangeUsername = event => {\n    setUsername(event.target.value);\n  };\n\n  const handleChangeEmail = event => {\n    setEmail(event.target.value);\n  };\n\n  const handleChangePassword = event => {\n    setPassword(event.target.value);\n  };\n\n  const authSubmitHandler = event => {\n    event.preventDefault();\n\n    if (username === \"\" || email === \"\" || password === \"\") {\n      setErrorMessage(\"Please enter valid username\");\n    }\n\n    if (email === \"\") {\n      setErrorMessage(\"Please enter valid email\");\n    }\n\n    if (password === \"\") {\n      setErrorMessage(\"Please enter valid password\");\n    }\n\n    if (isLoginMode) {\n      const formData = {\n        email,\n        password\n      };\n      props.login(formData);\n    } else {\n      const formData = {\n        username,\n        email,\n        password\n      };\n      console.log(\"formData\", formData);\n      props.signup(formData);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"authentication\",\n      children: [isLoginMode ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: authSubmitHandler,\n        children: [!isLoginMode && /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"username\",\n          placeholder: \"Username\",\n          onChange: handleChangeUsername,\n          value: username,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          placeholder: \"Email Address\",\n          onChange: handleChangeEmail,\n          value: email,\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          placeholder: \"Password\",\n          onChange: handleChangePassword,\n          value: password,\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn submit-btn\",\n          children: isLoginMode ? \"LOGIN\" : \"SIGNUP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: switchModeHandler,\n        className: \"btn switch-btn\",\n        children: [\"SWITCH TO \", isLoginMode ? \"SIGNUP\" : \"LOGIN\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"/a1FjWTEe4XFZZVRn/DSurXa3lw=\");\n\n_c = Auth;\n\nconst mapStateToProps = state => {\n  return {\n    search: state.search\n  };\n};\n\nexport default connect(mapStateToProps, {\n  login,\n  signup\n})(Auth);\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/harri/Documents/jojo/server/client/src/components/Auth/Auth.js"],"names":["React","useState","connect","login","signup","Auth","props","isLoginMode","setIsLoginMode","username","setUsername","email","setEmail","password","setPassword","errorMessage","setErrorMessage","switchModeHandler","prevMode","handleChangeUsername","event","target","value","handleChangeEmail","handleChangePassword","authSubmitHandler","preventDefault","formData","console","log","mapStateToProps","state","search"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { login, signup } from \"../../store/actions\";\r\n\r\nimport \"./Auth.css\";\r\n\r\nconst Auth = (props) => {\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const switchModeHandler = () => {\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  const handleChangeUsername = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  const handleChangeEmail = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const handleChangePassword = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n  const authSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (username === \"\" || email === \"\" || password === \"\") {\r\n      setErrorMessage(\"Please enter valid username\");\r\n    }\r\n\r\n    if (email === \"\") {\r\n      setErrorMessage(\"Please enter valid email\");\r\n    }\r\n\r\n    if (password === \"\") {\r\n      setErrorMessage(\"Please enter valid password\");\r\n    }\r\n\r\n    if (isLoginMode) {\r\n      const formData = {\r\n        email,\r\n        password,\r\n      };\r\n      props.login(formData);\r\n    } else {\r\n      const formData = {\r\n        username,\r\n        email,\r\n        password,\r\n      };\r\n      console.log(\"formData\", formData);\r\n      props.signup(formData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"authentication\">\r\n        {isLoginMode ? <h2>Login</h2> : <h2>Signup</h2>}\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <input\r\n              name=\"username\"\r\n              placeholder=\"Username\"\r\n              onChange={handleChangeUsername}\r\n              value={username}\r\n              type=\"text\"\r\n            />\r\n          )}\r\n          <input\r\n            name=\"email\"\r\n            placeholder=\"Email Address\"\r\n            onChange={handleChangeEmail}\r\n            value={email}\r\n            type=\"email\"\r\n          />\r\n          <input\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={handleChangePassword}\r\n            value={password}\r\n            type=\"password\"\r\n          />\r\n          <button type=\"submit\" className=\"btn submit-btn\">\r\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n          </button>\r\n        </form>\r\n        <button onClick={switchModeHandler} className=\"btn switch-btn\">\r\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    search: state.search,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { login, signup })(Auth);\r\n"]},"metadata":{},"sourceType":"module"}