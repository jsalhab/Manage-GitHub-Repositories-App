{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harri\\\\Documents\\\\jojo\\\\server\\\\client\\\\src\\\\components\\\\SearchBar\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./SearchBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = props => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameIsTouched, setEnteredNameIsTouched] = useState(false);\n\n  const handleOnChange = event => {\n    setSearchTerm(event.target.value);\n    setEnteredNameIsValid(false);\n    setEnteredNameIsValid(true);\n  };\n\n  const fetchRepos = event => {\n    let code = event.keyCode || event.which;\n\n    if (code === 13) {\n      setEnteredNameIsTouched(true);\n\n      if (searchTerm.trim() === \"\") {\n        setEnteredNameIsValid(false);\n        return;\n      }\n\n      props.onFetchRepos(searchTerm);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Search\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"SearchInput\",\n      type: \"text\",\n      onChange: handleOnChange,\n      onKeyPress: fetchRepos,\n      value: searchTerm,\n      placeholder: \"Search by repository name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), !enteredNameIsValid && enteredNameIsTouched && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-msg\",\n      children: \"Please enter a valid repository name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBar, \"HzQstMg7SAjqdHxmujUGGck5414=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/harri/Documents/jojo/server/client/src/components/SearchBar/SearchBar.js"],"names":["useState","SearchBar","props","searchTerm","setSearchTerm","enteredNameIsValid","setEnteredNameIsValid","enteredNameIsTouched","setEnteredNameIsTouched","handleOnChange","event","target","value","fetchRepos","code","keyCode","which","trim","onFetchRepos"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,iBAAP;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACO,oBAAD,EAAuBC,uBAAvB,IAAkDR,QAAQ,CAAC,KAAD,CAAhE;;AAEA,QAAMS,cAAc,GAAIC,KAAD,IAAW;AAChCN,IAAAA,aAAa,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACAN,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAA,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,GAJD;;AAKA,QAAMO,UAAU,GAAIH,KAAD,IAAW;AAC5B,QAAII,IAAI,GAAGJ,KAAK,CAACK,OAAN,IAAiBL,KAAK,CAACM,KAAlC;;AACA,QAAIF,IAAI,KAAK,EAAb,EAAiB;AACfN,MAAAA,uBAAuB,CAAC,IAAD,CAAvB;;AACA,UAAIL,UAAU,CAACc,IAAX,OAAsB,EAA1B,EAA8B;AAC5BX,QAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA;AACD;;AAEDJ,MAAAA,KAAK,CAACgB,YAAN,CAAmBf,UAAnB;AACD;AACF,GAXD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,EAAEM,cAHZ;AAIE,MAAA,UAAU,EAAEI,UAJd;AAKE,MAAA,KAAK,EAAEV,UALT;AAME,MAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,YADF,EASG,CAACE,kBAAD,IAAuBE,oBAAvB,iBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CArCD;;GAAMN,S;;KAAAA,S;AAuCN,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nimport \"./SearchBar.css\";\r\n\r\nconst SearchBar = (props) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\r\n  const [enteredNameIsTouched, setEnteredNameIsTouched] = useState(false);\r\n\r\n  const handleOnChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n    setEnteredNameIsValid(false);\r\n    setEnteredNameIsValid(true);\r\n  };\r\n  const fetchRepos = (event) => {\r\n    let code = event.keyCode || event.which;\r\n    if (code === 13) {\r\n      setEnteredNameIsTouched(true);\r\n      if (searchTerm.trim() === \"\") {\r\n        setEnteredNameIsValid(false);\r\n        return;\r\n      }\r\n\r\n      props.onFetchRepos(searchTerm);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Search\">\r\n      <input\r\n        className=\"SearchInput\"\r\n        type=\"text\"\r\n        onChange={handleOnChange}\r\n        onKeyPress={fetchRepos}\r\n        value={searchTerm}\r\n        placeholder=\"Search by repository name\"\r\n      />\r\n      {!enteredNameIsValid && enteredNameIsTouched && (\r\n        <div className=\"error-msg\">Please enter a valid repository name</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n"]},"metadata":{},"sourceType":"module"}