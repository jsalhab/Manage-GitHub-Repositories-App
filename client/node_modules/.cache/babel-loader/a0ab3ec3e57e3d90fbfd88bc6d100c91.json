{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harri\\\\Documents\\\\jojo\\\\server\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { login, signup } from \"../../store/actions\";\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = props => {\n  _s();\n\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailIsValid, setEmailIsValid] = useState(true);\n  const [passwordIsValid, setPasswordIsValid] = useState(true);\n  const [emailIsTouched, setEmailIsTouched] = useState(false);\n  const [passwordIsTouched, setPasswordIsTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(true);\n\n  const switchModeHandler = () => {\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const handleChangeEmail = event => {\n    setEmail(event.target.value);\n\n    if (event.target.value.trim() !== \"\") {\n      setEmailIsValid(true);\n      return;\n    }\n  };\n\n  const handleChangePassword = event => {\n    setPassword(event.target.value);\n\n    if (event.target.value.trim() !== \"\") {\n      setPasswordIsValid(true);\n      return;\n    }\n  };\n\n  const authSubmitHandler = event => {\n    event.preventDefault();\n    setUsernameIsTouched(true);\n    setEmailIsTouched(true);\n    setPasswordIsTouched(true);\n\n    if (username.trim() === \"\" || email.trim() === \"\" || password.trim() === \"\") {\n      setFormIsValid(false);\n      return;\n    }\n\n    if (username.trim() === \"\") {\n      setUsernameIsValid(false);\n      return;\n    }\n\n    if (email.trim() === \"\") {\n      setEmailIsValid(false);\n      return;\n    }\n\n    if (password.trim() === \"\") {\n      setPasswordIsValid(false);\n      return;\n    }\n\n    setUsernameIsValid(true);\n    setEmailIsValid(true);\n    setPasswordIsValid(true);\n    setFormIsValid(true);\n\n    if (isLoginMode) {\n      const formData = {\n        email,\n        password\n      };\n      props.login(formData);\n    } else {\n      const formData = {\n        username,\n        email,\n        password\n      };\n      console.log(\"formData\", formData);\n      props.signup(formData);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"authentication\",\n      children: [isLoginMode ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-msg\",\n        children: props.auth.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: authSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          placeholder: \"Email Address\",\n          onChange: handleChangeEmail,\n          value: email,\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), !emailIsValid && emailIsTouched || !formIsValid && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-msg\",\n          children: \"Please enter an email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          placeholder: \"Password\",\n          onChange: handleChangePassword,\n          value: password,\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), !passwordIsValid && passwordIsTouched || !formIsValid && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-msg\",\n          children: \"Please enter a valid password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn submit-btn\",\n          children: isLoginMode ? \"LOGIN\" : \"SIGNUP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: switchModeHandler,\n        className: \"btn switch-btn\",\n        children: [\"SWITCH TO \", isLoginMode ? \"SIGNUP\" : \"LOGIN\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"gvYWQDbrFGtxQ9PR10OzEk//pec=\");\n\n_c = Auth;\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  login,\n  signup\n})(Auth);\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/harri/Documents/jojo/server/client/src/components/Auth/Auth.js"],"names":["React","useState","connect","login","signup","Auth","props","isLoginMode","setIsLoginMode","username","setUsername","email","setEmail","password","setPassword","emailIsValid","setEmailIsValid","passwordIsValid","setPasswordIsValid","emailIsTouched","setEmailIsTouched","passwordIsTouched","setPasswordIsTouched","formIsValid","setFormIsValid","switchModeHandler","prevMode","handleChangeEmail","event","target","value","trim","handleChangePassword","authSubmitHandler","preventDefault","setUsernameIsTouched","setUsernameIsValid","formData","console","log","auth","error","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { login, signup } from \"../../store/actions\";\r\n\r\nimport \"./Auth.css\";\r\n\r\nconst Auth = (props) => {\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [emailIsValid, setEmailIsValid] = useState(true);\r\n  const [passwordIsValid, setPasswordIsValid] = useState(true);\r\n  const [emailIsTouched, setEmailIsTouched] = useState(false);\r\n  const [passwordIsTouched, setPasswordIsTouched] = useState(false);\r\n  const [formIsValid, setFormIsValid] = useState(true);\r\n\r\n  const switchModeHandler = () => {\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  const handleChangeEmail = (event) => {\r\n    setEmail(event.target.value);\r\n    if (event.target.value.trim() !== \"\") {\r\n      setEmailIsValid(true);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleChangePassword = (event) => {\r\n    setPassword(event.target.value);\r\n    if (event.target.value.trim() !== \"\") {\r\n      setPasswordIsValid(true);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const authSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    setUsernameIsTouched(true);\r\n    setEmailIsTouched(true);\r\n    setPasswordIsTouched(true);\r\n\r\n    if (\r\n      username.trim() === \"\" ||\r\n      email.trim() === \"\" ||\r\n      password.trim() === \"\"\r\n    ) {\r\n      setFormIsValid(false);\r\n      return;\r\n    }\r\n\r\n    if (username.trim() === \"\") {\r\n      setUsernameIsValid(false);\r\n      return;\r\n    }\r\n\r\n    if (email.trim() === \"\") {\r\n      setEmailIsValid(false);\r\n      return;\r\n    }\r\n\r\n    if (password.trim() === \"\") {\r\n      setPasswordIsValid(false);\r\n      return;\r\n    }\r\n\r\n    setUsernameIsValid(true);\r\n    setEmailIsValid(true);\r\n    setPasswordIsValid(true);\r\n    setFormIsValid(true);\r\n\r\n    if (isLoginMode) {\r\n      const formData = {\r\n        email,\r\n        password,\r\n      };\r\n      props.login(formData);\r\n    } else {\r\n      const formData = {\r\n        username,\r\n        email,\r\n        password,\r\n      };\r\n      console.log(\"formData\", formData);\r\n      props.signup(formData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"authentication\">\r\n        {isLoginMode ? <h2>Login</h2> : <h2>Signup</h2>}\r\n        <hr />\r\n        <div className=\"error-msg\">{props.auth.error}</div>\r\n        <form onSubmit={authSubmitHandler}>\r\n          <input\r\n            name=\"email\"\r\n            placeholder=\"Email Address\"\r\n            onChange={handleChangeEmail}\r\n            value={email}\r\n            type=\"email\"\r\n          />\r\n          {(!emailIsValid && emailIsTouched) ||\r\n            (!formIsValid && (\r\n              <div className=\"error-msg\">Please enter an email</div>\r\n            ))}\r\n          <input\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={handleChangePassword}\r\n            value={password}\r\n            type=\"password\"\r\n          />\r\n          {(!passwordIsValid && passwordIsTouched) ||\r\n            (!formIsValid && (\r\n              <div className=\"error-msg\">Please enter a valid password</div>\r\n            ))}\r\n          <button type=\"submit\" className=\"btn submit-btn\">\r\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n          </button>\r\n        </form>\r\n        <button onClick={switchModeHandler} className=\"btn switch-btn\">\r\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { login, signup })(Auth);\r\n"]},"metadata":{},"sourceType":"module"}