{"ast":null,"code":"import api from \"../../apis/api\";\nimport history from \"../../history\";\nimport { START_SEARCHING, SEARCH_REPO, ADD_BOOKMARK, DELETE_BOOKMARK, FETCH_BOOKMARKS, FETCH_REPOS_FAILD, LOGIN, SIGNUP } from \"./types\";\nexport const searchRepo = searchterm => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: START_SEARCHING\n    });\n    const response = await api.get(`/search/${searchterm}`);\n    dispatch({\n      type: SEARCH_REPO,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_REPOS_FAILD\n    });\n  }\n};\nexport const addBookmark = id => async (dispatch, getState) => {\n  const response = await api.get(`/bookmark/${id}`);\n  dispatch({\n    type: ADD_BOOKMARK,\n    payload: response\n  });\n};\nexport const deleteBookmark = id => async (dispatch, getState) => {\n  const response = await api.delete(`/delete/${id}`);\n  dispatch({\n    type: DELETE_BOOKMARK,\n    payload: response\n  });\n};\nexport const fetchBookmarks = () => async (dispatch, getState) => {\n  const response = await api.get(`/bookmarks`);\n  dispatch({\n    type: FETCH_BOOKMARKS,\n    payload: response.data\n  });\n};\nexport const login = formData => async (dispatch, getState) => {\n  await api.post(`/login`, formData).then(response => {\n    dispatch({\n      type: LOGIN,\n      payload: response.data\n    });\n    history.push(\"/search\");\n    localStorage.setItem(\"userData\", JSON.stringify({\n      userId: response.data.userId,\n      token: response.data.token\n    }));\n  }).catch(err => {\n    console.log(err.data);\n  });\n};\nexport const signup = formData => async (dispatch, getState) => {\n  console.log(\"kii\", formData);\n  const response = await api.post(`/signup`, formData);\n  dispatch({\n    type: SIGNUP,\n    payload: response.data\n  });\n  history.push(\"/search\");\n};","map":{"version":3,"sources":["C:/Users/harri/Documents/jojo/server/client/src/store/actions/index.js"],"names":["api","history","START_SEARCHING","SEARCH_REPO","ADD_BOOKMARK","DELETE_BOOKMARK","FETCH_BOOKMARKS","FETCH_REPOS_FAILD","LOGIN","SIGNUP","searchRepo","searchterm","dispatch","getState","type","response","get","payload","data","error","addBookmark","id","deleteBookmark","delete","fetchBookmarks","login","formData","post","then","push","localStorage","setItem","JSON","stringify","userId","token","catch","err","console","log","signup"],"mappings":"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","sourcesContent":["import api from \"../../apis/api\";\r\nimport history from \"../../history\";\r\n\r\nimport {\r\n  START_SEARCHING,\r\n  SEARCH_REPO,\r\n  ADD_BOOKMARK,\r\n  DELETE_BOOKMARK,\r\n  FETCH_BOOKMARKS,\r\n  FETCH_REPOS_FAILD,\r\n  LOGIN,\r\n  SIGNUP,\r\n} from \"./types\";\r\n\r\nexport const searchRepo = (searchterm) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: START_SEARCHING });\r\n    const response = await api.get(`/search/${searchterm}`);\r\n    dispatch({ type: SEARCH_REPO, payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_REPOS_FAILD });\r\n  }\r\n};\r\n\r\nexport const addBookmark = (id) => async (dispatch, getState) => {\r\n  const response = await api.get(`/bookmark/${id}`);\r\n  dispatch({ type: ADD_BOOKMARK, payload: response });\r\n};\r\n\r\nexport const deleteBookmark = (id) => async (dispatch, getState) => {\r\n  const response = await api.delete(`/delete/${id}`);\r\n  dispatch({ type: DELETE_BOOKMARK, payload: response });\r\n};\r\n\r\nexport const fetchBookmarks = () => async (dispatch, getState) => {\r\n  const response = await api.get(`/bookmarks`);\r\n  dispatch({ type: FETCH_BOOKMARKS, payload: response.data });\r\n};\r\n\r\nexport const login = (formData) => async (dispatch, getState) => {\r\n  await api\r\n    .post(`/login`, formData)\r\n    .then((response) => {\r\n      dispatch({ type: LOGIN, payload: response.data });\r\n      history.push(\"/search\");\r\n      localStorage.setItem(\r\n        \"userData\",\r\n        JSON.stringify({\r\n          userId: response.data.userId,\r\n          token: response.data.token,\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.data);\r\n    });\r\n};\r\n\r\nexport const signup = (formData) => async (dispatch, getState) => {\r\n  console.log(\"kii\", formData);\r\n  const response = await api.post(`/signup`, formData);\r\n  dispatch({ type: SIGNUP, payload: response.data });\r\n  history.push(\"/search\");\r\n};\r\n"]},"metadata":{},"sourceType":"module"}