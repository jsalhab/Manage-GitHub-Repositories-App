{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harri\\\\Documents\\\\jojo\\\\server\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Header from \"./components/Header/Header\";\nimport SearchPage from \"./components/SearchPage/SearchPage\";\nimport Bookmarks from \"./components/Bookmarks/Bookmarks\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Auth from \"./components/Auth/Auth\";\nimport history from \"./history\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n\n    if (storedData && storedData.token) {\n      setIsLoggedIn(true);\n    }\n  }, [isLoggedIn]);\n\n  const logout = () => {\n    localStorage.removeItem(\"userData\");\n    setIsLoggedIn(false);\n    history.push(\"/\");\n  }; // let routes;\n  // if (isLoggedIn) {\n  //   routes = (\n  //     <Switch>\n  //       <Route path=\"/search\" exact component={SearchPage} />\n  //       <Route path=\"/bookmarks\" exact component={Bookmarks} />\n  //       <Redirect to=\"/search\" />\n  //     </Switch>\n  //   );\n  // } else {\n  //   routes = (\n  //     <Switch>\n  //       <Redirect to=\"/\" />\n  //     </Switch>\n  //   );\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      history: history,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        isLoggedIn: isLoggedIn,\n        logout: logout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: Auth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/search\",\n        exact: true,\n        component: SearchPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/bookmarks\",\n        exact: true,\n        component: Bookmarks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = App;\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/harri/Documents/jojo/server/client/src/App.js"],"names":["useEffect","useState","Header","SearchPage","Bookmarks","Router","Route","Switch","Redirect","connect","Auth","history","App","props","isLoggedIn","setIsLoggedIn","storedData","JSON","parse","localStorage","getItem","token","logout","removeItem","push","mapStateToProps","state","auth"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgCC,QAAhC,QAAgD,kBAAhD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,KAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnB;;AACA,QAAIJ,UAAU,IAAIA,UAAU,CAACK,KAA7B,EAAoC;AAClCN,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GALQ,EAKN,CAACD,UAAD,CALM,CAAT;;AAOA,QAAMQ,MAAM,GAAG,MAAM;AACnBH,IAAAA,YAAY,CAACI,UAAb,CAAwB,UAAxB;AACAR,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAJ,IAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACD,GAJD,CAVqB,CAgBrB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEb,OAAjB;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,UAAU,EAAEG,UAApB;AAAgC,QAAA,MAAM,EAAEQ;AAAxC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,SAAS,EAAEZ;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,KAAK,MAA3B;AAA4B,QAAA,SAAS,EAAEP;AAAvC;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,KAAK,MAA9B;AAA+B,QAAA,SAAS,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA7CD;;GAAMQ,G;;KAAAA,G;;AA+CN,MAAMa,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACC;AADP,GAAP;AAGD,CAJD;;AAMA,eAAelB,OAAO,CAACgB,eAAD,CAAP,CAAyBb,GAAzB,CAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Header from \"./components/Header/Header\";\nimport SearchPage from \"./components/SearchPage/SearchPage\";\nimport Bookmarks from \"./components/Bookmarks/Bookmarks\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Auth from \"./components/Auth/Auth\";\nimport history from \"./history\";\n\nimport \"./App.css\";\n\nconst App = (props) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (storedData && storedData.token) {\n      setIsLoggedIn(true);\n    }\n  }, [isLoggedIn]);\n\n  const logout = () => {\n    localStorage.removeItem(\"userData\");\n    setIsLoggedIn(false);\n    history.push(\"/\");\n  };\n\n  // let routes;\n\n  // if (isLoggedIn) {\n  //   routes = (\n  //     <Switch>\n  //       <Route path=\"/search\" exact component={SearchPage} />\n  //       <Route path=\"/bookmarks\" exact component={Bookmarks} />\n  //       <Redirect to=\"/search\" />\n  //     </Switch>\n  //   );\n  // } else {\n  //   routes = (\n  //     <Switch>\n  //       <Redirect to=\"/\" />\n  //     </Switch>\n  //   );\n  // }\n\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <Header isLoggedIn={isLoggedIn} logout={logout} />\n        <Route path=\"/\" exact component={Auth} />\n        <Route path=\"/search\" exact component={SearchPage} />\n        <Route path=\"/bookmarks\" exact component={Bookmarks} />\n        <Redirect to=\"/\" />\n      </Router>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}